snippet #!
	#!/usr/bin/env python


snippet wh
	while ${1:condition}:
		${2}
# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
# New Method
snippet defs
	def ${1:mname}(self, ${2:arg}):
		${3:pass}
# New Property
snippet property
	def ${1:foo}():
		doc = "${2:The $1 property.}"
		def fget(self):
			${3:return self._$1}
		def fset(self, value):
			${4:self._$1 = value}
# Lambda
snippet lam
	${1:var} = lambda ${2:vars} : ${3:action}
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# ifmain
snippet ifmain
	if __name__ == '__main__':
		${1:main()}
# __magic__
snippet _
	__${1:init}__${2}
# -----------------------------
# python templates
snippet tp
	# -*- coding: utf-8 -*-

	"""
	${1:docstring.}
	"""

	import ${2:module}

	def main():
		"""
		Return ${3}.
		"""
	
	if __name__ == '__main__':
		main()
snippet cod
	# -*- coding: utf-8 -*-
# module docs
snippet mdocs
	"""
		${1:`Filename('$1.py', 'foo.py')`}

		${2:This module implements...}

		:copyright: (c) ${3:`:r !date`} by ${4:author}.
	"""
# docstring
snippet "
	"""
	${1:docstring}
	"""
# ifs
snippet if
	if ${1:condition}:
		${2}
snippet elif
	elif ${1:condition}:
		${2}
snippet else
	else:
		${1}
# for
snippet for
	for ${1:needle} in ${2:haystack}:
		${3}
# defs
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		${3}
snippet req
	`match(getline('.'), 'import') == 0 ? 'requests' : 'request'`
# Flask
snippet flask
	# -*- coding: utf-8 -*-

	from flask import Flask

	app = Flask(__name__)
snippet route
	@${1:app}.route('${2:/}', methods=[${3:'POST', 'GET'}])
	def ${4:endpoint}():
		pass
